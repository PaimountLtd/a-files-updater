name: build

concurrency: 
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

on:
  push:
    branches: [ "master" ]
    tags:
      - '*'
  pull_request:
    branches: [ "master" ]

env:
  PACKAGE_DIRECTORY: a-file-updater
  PACKAGE_NAME: slobs_updater
  BUILD_CONFIGURATION: RelWithDebInfo
  BUILD_DIRECTORY: "build"
  DISTRIBUTE_DIRECTORY: "distribute"
  RELEASE_BUCKET: "obs-studio-deployment"
  ELECTRON_VERSION: "v13.4.0"
  ZLIB_DIST_NAME: zlib-1.2.11-static-mt
  OPENSSL_DIST_NAME: openssl-1.1.1c-x64
  BOOST_DIST_NAME: boost-vc143-1_79_0-bin
  DEPS_DIST_URI: https://s3-us-west-2.amazonaws.com/streamlabs-obs-updater-deps
  DEPS_LOCAL_PATH: ${{github.workspace}}\slobs-updater-deps

permissions:
  contents: read

jobs:
  build:
    name: 'Build a package'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Show GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'
      - name: Install dependencies
        run: yarn install --immutable --immutable-cache --check-cache
      - name: Download binary deps
        run: ./ci/download_deps.bat
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1
      - name: Configure
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat" |
          cmake -H"${{ github.workspace }}" -B"${{env.BUILD_DIRECTORY}}" -G"Visual Studio 17 2022" -DCMAKE_BUILD_TYPE=${{env.BUILD_CONFIGURATION}} -A x64  -DBOOST_ROOT="%BOOST_ROOT%" -DOPENSSL_ROOT_DIR="%OPENSSL_ROOT%" -DZLIB_ROOT="%ZLIB_ROOT%" -DUSE_STREAMLABS_RESOURCE=ON -DSENTRY_PROJECT_ID="1390326" -DSENTRY_PROJECT_KEY="7492ebea21f54618a550163938dc164d"
        env:
          INSTALL_PACKAGE_PATH: "${{env.BUILD_DIRECTORY}}/${{env.DISTRIBUTE_DIRECTORY}}/${{env.PACKAGE_DIRECTORY}}"
          ZLIB_ROOT: ${{env.DEPS_LOCAL_PATH}}\${{env.ZLIB_DIST_NAME}}
          OPENSSL_ROOT: ${{env.DEPS_LOCAL_PATH}}\${{env.OPENSSL_DIST_NAME}}
          BOOST_ROOT: ${{env.DEPS_LOCAL_PATH}}\${{env.BOOST_DIST_NAME}}
      - name: Build
        run: cmake --build "${{env.BUILD_DIRECTORY}}" --target install --config ${{env.BUILD_CONFIGURATION}}
      - name: Cache build
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_DIRECTORY}}
          key: ${{ runner.os }}-build-${{ github.sha }}

  upload_debug_symbols:
    needs: build
    name: 'Upload debug symbols'
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get build from cache
        id: cache-check
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_DIRECTORY}}
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Check cache
        if: steps.cache-check.outputs.cache-hit != 'true'
        run: exit 1
      - name: Fetch symsrv-scripts
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
          repository: stream-labs/symsrv-scripts
          path: symsrv-scripts
      - name: Run symbol server scripts
        run: ./symsrv-scripts/main.bat "${{ github.workspace }}/symsrv-scripts" ".\main.ps1 -localSourceDir '${{ github.workspace }}' -repo_userId 'stream-labs' -repo_name '${{env.PACKAGE_NAME}}' -repo_branch '${{ github.sha }}'"
        env:
          AWS_SYMB_ACCESS_KEY_ID: ${{secrets.AWS_SYMB_ACCESS_KEY_ID}}
          AWS_SYMB_SECRET_ACCESS_KEY: ${{secrets.AWS_SYMB_SECRET_ACCESS_KEY}}
        shell: powershell

  upload_release_package:
    needs: build
    name: 'Upload release package'
    runs-on: windows-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
        shell: bash
      - name: Get build from cache
        id: cache-check
        uses: actions/cache@v3
        with:
          path: ${{env.BUILD_DIRECTORY}}
          key: ${{ runner.os }}-build-${{ github.sha }}
      - name: Check cache
        if: steps.cache-check.outputs.cache-hit != 'true'
        run: exit 1
      - name: Tar artifact for deployment
        run: tar -cvzf ${{env.TARGET_ARTIFACT}}.tar.gz -C ${{env.INSTALL_DISTRIBUTE_PATH}} ${{env.PACKAGE_DIRECTORY}}
        env:
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{ steps.get_version.outputs.VERSION }}-win64
          INSTALL_DISTRIBUTE_PATH: "${{env.BUILD_DIRECTORY}}/${{env.DISTRIBUTE_DIRECTORY}}"
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_RELEASE_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_RELEASE_SECRET_ACCESS_KEY}}
          aws-region: us-west-2
      - name: Deploy
        run: aws s3 cp ${{env.TARGET_ARTIFACT}}.tar.gz s3://${{env.RELEASE_BUCKET}} --acl public-read
        env:
          TARGET_ARTIFACT: ${{env.PACKAGE_NAME}}-${{ steps.get_version.outputs.VERSION }}-win64