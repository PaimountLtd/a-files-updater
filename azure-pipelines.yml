trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*

workspace:
  clean: all

strategy:
  matrix:
    Release:
      BUILD_TYPE: Release 

pool:
  vmImage: 'vs2017-win2016'

variables:
  ZLIB_DIST_NAME: zlib-1.2.11-static-mt
  OPENSSL_DIST_NAME: openssl-1.1.1c-x64
  BOOST_DIST_NAME: boost-vc141-1_70_0-bin
  DEPS_DIST_URI: https://s3-us-west-2.amazonaws.com/streamlabs-obs-updater-deps
  DEPS_LOCAL_PATH: $(Build.SourcesDirectory)\slobs-updater-deps
  ZLIB_ROOT: $(DEPS_LOCAL_PATH)\$(ZLIB_DIST_NAME)
  OPENSSL_ROOT: $(DEPS_LOCAL_PATH)\$(OPENSSL_DIST_NAME)
  BOOST_ROOT: $(DEPS_LOCAL_PATH)\$(BOOST_DIST_NAME)
  BUILD_DIR: $(Build.SourcesDirectory)\build

steps:
- powershell: git config --global core.autocrlf false
  displayName: 'Set Unix checkout for git'

- checkout: self
  fetchDepth: 10

- task: NuGetToolInstaller@0
  displayName: 'Install NuGet'
  inputs:
    versionSpec: '5.1.0'

- script: |
    nuget install secure-file -ExcludeVersion
    mkdir "%DEPS_LOCAL_PATH%"
    curl -kLO "%DEPS_DIST_URI%/%ZLIB_DIST_NAME%.7z" -f --retry 5
    curl -kLO "%DEPS_DIST_URI%/%OPENSSL_DIST_NAME%.7z" -f --retry 5
    curl -kLO "%DEPS_DIST_URI%/%BOOST_DIST_NAME%.7z" -f --retry 5
    7z x "%ZLIB_DIST_NAME%.7z" -o"%DEPS_LOCAL_PATH%\%ZLIB_DIST_NAME%" -y
    7z x "%OPENSSL_DIST_NAME%.7z" -o"%DEPS_LOCAL_PATH%\$(OPENSSL_DIST_NAME)" -y
    7z x "%BOOST_DIST_NAME%.7z" -o"%DEPS_LOCAL_PATH%\%BOOST_DIST_NAME%" -y
    set PATH=%DEPS_LOCAL_PATH%;%PATH%
  displayName: 'Install dependencies'

- script: |
    call "C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
    cmake -H. -B"%BUILD_DIR%" -G "Visual Studio 15 2017 Win64" -DCMAKE_BUILD_TYPE=%BUILD_TYPE% -DBOOST_ROOT="%BOOST_ROOT%" -DOPENSSL_ROOT_DIR="%OPENSSL_ROOT%" -DZLIB_ROOT="%ZLIB_ROOT%" -DUSE_STREAMLABS_RESOURCE=ON
  displayName: 'Configure updater'

- script: 'cmake --build "%BUILD_DIR%" --config %BUILD_TYPE%'
  displayName: 'Build updater'

- script: |
    copy "%BUILD_DIR%\%BUILD_TYPE%\*.exe" "%BUILD_ARTIFACTSTAGINGDIRECTORY%"
    copy "%BUILD_DIR%\%BUILD_TYPE%\*.pdb" "%BUILD_ARTIFACTSTAGINGDIRECTORY%"
  displayName: 'Copy files to be published'

- task: PublishBuildArtifacts@1
  displayName: 'Publish artifacts'
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'updater-$(BUILD_TYPE)'
    
- task: GithubRelease@0 
  displayName: 'Deploy to GitHub'
  condition: and(succeeded(), contains(variables['Build.SourceBranch'], 'tags'))  
  inputs:
    gitHubConnection: stream-labs_deploy
    repositoryName: stream-labs/a-files-updater
    assets: $(Build.ArtifactStagingDirectory)